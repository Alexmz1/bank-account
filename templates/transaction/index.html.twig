{% extends 'base.html.twig' %}

{% block title %}Vos transaction{% endblock %}

{% block stylesheets %}
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/daisyui@1.4.6/dist/full.css" rel="stylesheet">
{% endblock %}

{% block body %}
<div class="flex min-h-screen bg-gray-100">
    {% include 'parts/left_bar.html.twig' with {'class': 'w-1/6'} %}

    <div class="flex-1 p-6 overflow-x-auto">
        <h1 class="text-2xl font-bold mb-4 text-center">Transaction</h1>

        <div class="mb-4 w-1/2">
            <input type="text" id="search" class="input input-bordered w-full" placeholder="Rechercher une transaction...">
        </div>

        <div class="overflow-x-auto mt-10">
            <table class="table w-full">
                <thead>
                    <tr>
                        <th>Pointage</th>
                        <th>Montant</th>
                        <th>Moyen de paiement</th>
                        <th>Type d'opération</th>
                        <th>Description</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                {% set has_transactions = false %}
                {% for transaction in transactions %}
                    {% if transaction.account.user == app.user %}
                        {% set has_transactions = true %}
                        <tr class="{% if transaction.point %}hidden{% endif %}" data-pointed="{{ transaction.point ? '1' : '0' }}">
                            <td>
                                <input type="checkbox" class="checkbox toggle-visibility" data-id="{{ transaction.id }}" {% if transaction.point %}checked{% endif %}>
                            </td>
                            <td>{{ transaction.amount }} €</td>
                            <td>{{ transaction.paymentMethod.name }}</td>
                            <td>{{ transaction.operationType.value }}</td>
                            <td>{{ transaction.description }}</td>
                            <td>
                                <a href="{{ path('app_transaction_edit', {'id': transaction.id}) }}" class="btn btn-primary btn-xs rounded-md text-white">Modifier</a>
                                <form method="post" action="{{ path('app_transaction_delete', {'id': transaction.id}) }}" style="display:inline;" onsubmit="return confirm('Êtes-vous sûr ?');">
                                    <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ transaction.id) }}">
                                    <button class="btn btn-secondary btn-xs rounded-md text-white" type="submit">Supprimer</button>
                                </form>
                            </td>
                        </tr>
                    {% endif %}
                {% endfor %}
                {% if not has_transactions %}
                    <tr>
                        <td colspan="6" class="text-center">Aucune transaction trouvée.</td>
                    </tr>
                {% endif %}
                </tbody>
            </table>

            <button id="toggleHidden" class="btn mt-4">Afficher les transactions masquées</button>

            {% if account %}
            <a href="{{ path('app_transaction_new', {'accountId': account.id}) }}" class="btn btn-primary rounded-md text-white mt-4">
                Ajouter une transaction pour le compte
            </a>
            {% endif %}            
            <a href="{{ path('app_account_index') }}" class="btn btn-secondary rounded-md text-white mt-4">Retourner à vos comptes</a>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const toggleBtn = document.getElementById('toggleHidden');
        let showingHidden = false;
    
        // Recherche en temps réel
        document.getElementById('search').addEventListener('input', function () {
            let filter = this.value.toLowerCase();
            document.querySelectorAll('tbody tr').forEach(row => {
                let match = Array.from(row.querySelectorAll('td')).some(cell =>
                    cell.textContent.toLowerCase().includes(filter)
                );
                row.style.display = match ? '' : 'none';
            });
        });
    
        // Toggle checkbox + enregistrement + masquage
        document.querySelectorAll('.toggle-visibility').forEach(checkbox => {
            checkbox.addEventListener('change', function () {
                const transactionId = this.dataset.id;
                const isChecked = this.checked;
                const row = this.closest('tr');
    
                fetch(`/transaction/${transactionId}/toggle`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest',
                    },
                    body: JSON.stringify({ point: isChecked })
                }).then(response => {
                    if (response.ok) {
                        // Si case cochée, masquer sauf si on est déjà en mode "voir masqués"
                        if (isChecked && !showingHidden) {
                            row.classList.add('hidden');
                        }
                        // Si décochée, toujours la réafficher
                        if (!isChecked) {
                            row.classList.remove('hidden');
                        }
                    } else {
                        // rollback checkbox si échec
                        this.checked = !isChecked;
                    }
                });
            });
        });
    
        // Bouton pour afficher/cacher les lignes masquées
        toggleBtn.addEventListener('click', function () {
            showingHidden = !showingHidden;
    
            document.querySelectorAll('.toggle-visibility').forEach(checkbox => {
                const row = checkbox.closest('tr');
                if (checkbox.checked) {
                    row.classList.toggle('hidden', !showingHidden);
                }
            });
    
            toggleBtn.textContent = showingHidden
                ? 'Cacher les transactions masquées'
                : 'Afficher les transactions masquées';
        });
    });
    </script>
{% endblock %}
